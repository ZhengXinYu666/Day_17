登录注册案例：

用户名：[          ]      ------>填写用户名，密码提交给服务器
密码：[           ]            由服务器端实现在数据库查找，如果数据信息匹配，就返回true，否则false
    [登录]   [重置]
                                                       功能实现 ：登录功能，注册功能
    客户端                              服务器端          数据库：存储数据

用户名：[          ]      ------>填写用户名和密码，提交给服务器，然后由服务器端实现在数据库存储
密码：[           ]       <------如果信息无误，就返回true，否则false
    [注册]   [取消]

需求：用户登录注册案例

面向对象思想：不能想具体的动作，先想有哪些对象

A：有哪些类呢？
B：每个类有哪些东西呢？
C：类与类之间的关系是什么呢？

分析：
    A：有哪些类？
        用户类
        测试类
    B：每个类有什么东西么？
        成员变量：用户名，密码
        构造方法：无参构造
        成员方法：getXXX setXXX
                登录    注册

        假如用户类内容较多，维护就会麻烦，为了更清晰分类，就把用户划分成了两类
            用户基本描述类：
                成员变量：用户名，密码
                        构造方法：无参构造
                        成员方法：getXXX setXXX
                用户操作类：
                         登录    注册
        测试类：
            main方法
    C：类与类的关系是什么？
        在测试类中创建从用户操作类和用户基本描述类独享，并使用功能


分包：
    A：按功能划分
    B：按模块划分
    C：先按模块分，再按功能划分


    根据功能划分：
        用户基本描述类包：cn.zxy.pojo
        用户操作接口cn.zxy.dao
        用户操作类包：cn.zxy.dao.impl
        用户测试类：cn.zxy.test

        实现方式不同，做成接口方便多种途径实现
